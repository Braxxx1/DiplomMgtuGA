#pip install bcrypt
import mysql.connector
from dash import Input, Output, State, no_update
import bcrypt
from dash.exceptions import PreventUpdate

def register_auth_callbacks(app):
    @app.callback(
    Output("reg-message", "children"),
    Input("reg-submit", "n_clicks"),
    State("reg-name", "value"),
    State("reg-email", "value"),
    State("reg-password", "value"),
    State("reg-role", "value"),
    prevent_initial_call=True
    )
    def register_user(n, name, email, password, role):
        print("‚öôÔ∏è –ö–æ–ª–ª–±—ç–∫ —Å—Ä–∞–±–æ—Ç–∞–ª")

        if not all([name, email, password, role]):
            print("‚ùå –ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
            return "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è."

        try:
            print("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MySQL...")
            conn = mysql.connector.connect(
                host="127.0.0.1",
                user="root",
                password="KAgdeckeywukMe0",
                database="analizeprog",
                port=3306,
                connection_timeout=5
            )
            cursor = conn.cursor()
            print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

            cursor.execute("SELECT id FROM users WHERE email = %s", (email,))
            if cursor.fetchone():
                return "‚ùå Email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"

            import bcrypt
            hashed = bcrypt.hashpw(password.encode("utf-8"), bcrypt.gensalt()).decode("utf-8")

            cursor.execute("""
                INSERT INTO users (name, email, password_hash, role)
                VALUES (%s, %s, %s, %s)
            """, (name, email, hashed, role))
            conn.commit()

            return "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!"

        except Exception as e:
            import traceback
            print("‚ùå –û—à–∏–±–∫–∞:", e)
            traceback.print_exc()  # –≠—Ç–æ –ø–æ–∫–∞–∂–µ—Ç –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏
            return f"‚ùå –û—à–∏–±–∫–∞: {e}"


        finally:
            try:
                cursor.close()
                conn.close()
                print("üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
            except:
                pass
